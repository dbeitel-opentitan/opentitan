// SPDX-FileCopyrightText: Copyright (c) 2022 by Rivos Inc.
// Confidential and proprietary, see LICENSE for details.
// SPDX-License-Identifier: LicenseRef-Rivos-Internal-Only

// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// xbar_main_bind module generated by `tlgen.py` tool for assertions
module xbar_main_bind;
`ifndef GATE_LEVEL
  // Host interfaces
  bind xbar_main tlul_assert #(.EndpointType("Device")) tlul_assert_host_rv_core_ibex__corei (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_core_ibex__corei_i),
    .d2h    (tl_rv_core_ibex__corei_o)
  );
  bind xbar_main tlul_assert #(.EndpointType("Device")) tlul_assert_host_rv_core_ibex__cored (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_core_ibex__cored_i),
    .d2h    (tl_rv_core_ibex__cored_o)
  );
  bind xbar_main tlul_assert #(.EndpointType("Device")) tlul_assert_host_rv_dm__sba (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_dm__sba_i),
    .d2h    (tl_rv_dm__sba_o)
  );
  bind xbar_main tlul_assert #(.EndpointType("Device")) tlul_assert_host_mbx__hst (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_mbx__hst_i),
    .d2h    (tl_mbx__hst_o)
  );
  bind xbar_main tlul_assert #(.EndpointType("Device")) tlul_assert_host_dma__hst (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_dma__hst_i),
    .d2h    (tl_dma__hst_o)
  );

  // Device interfaces
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_rv_dm__regs (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_dm__regs_o),
    .d2h    (tl_rv_dm__regs_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_rv_dm__mem (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_dm__mem_o),
    .d2h    (tl_rv_dm__mem_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_peri (
    .clk_i  (clk_fixed_i),
    .rst_ni (rst_fixed_ni),
    .h2d    (tl_peri_o),
    .d2h    (tl_peri_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_rv_plic (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_plic_o),
    .d2h    (tl_rv_plic_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_otbn (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_otbn_o),
    .d2h    (tl_otbn_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_rv_core_ibex__cfg (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_rv_core_ibex__cfg_o),
    .d2h    (tl_rv_core_ibex__cfg_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_sram_ctrl_main__regs (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_sram_ctrl_main__regs_o),
    .d2h    (tl_sram_ctrl_main__regs_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_sram_ctrl_main__ram (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_sram_ctrl_main__ram_o),
    .d2h    (tl_sram_ctrl_main__ram_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_sram_ctrl_mbox__regs (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_sram_ctrl_mbox__regs_o),
    .d2h    (tl_sram_ctrl_mbox__regs_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_sram_ctrl_mbox__ram (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_sram_ctrl_mbox__ram_o),
    .d2h    (tl_sram_ctrl_mbox__ram_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_mbx__dev (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_mbx__dev_o),
    .d2h    (tl_mbx__dev_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_dma__dev (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_dma__dev_o),
    .d2h    (tl_dma__dev_i)
  );
  bind xbar_main tlul_assert #(.EndpointType("Host")) tlul_assert_device_extr__dev (
    .clk_i  (clk_main_i),
    .rst_ni (rst_main_ni),
    .h2d    (tl_extr__dev_o),
    .d2h    (tl_extr__dev_i)
  );
`endif
endmodule
