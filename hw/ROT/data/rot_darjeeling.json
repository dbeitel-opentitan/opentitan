{
  name: darjeeling
  type: top
  rnd_cnst_seed: 4881560218908238235
  datawidth: "32"
  power:
  {
    domains:
    [
      Aon
      "0"
    ]
    default: "0"
  }
  clocks:
  {
    hier_paths:
    {
      top: clkmgr_aon_clocks.
      ext: ""
      lpg: clkmgr_aon_cg_en.
    }
    srcs:
    [
      {
        name: main
        aon: no
        freq: "100000000"
      }
      {
        name: io
        aon: no
        freq: "96000000"
      }
      {
        name: usb
        aon: no
        freq: "48000000"
      }
      {
        name: aon
        aon: yes
        freq: "200000"
        ref: true
      }
    ]
    derived_srcs:
    [
      {
        name: io_div2
        aon: no
        div: 2
        src: io
        freq: "48000000"
      }
      {
        name: io_div4
        aon: no
        div: 4
        src: io
        freq: "24000000"
      }
    ]
    groups:
    [
      {
        name: ast
        src: ext
        sw_cg: no
      }
      {
        name: powerup
        src: top
        sw_cg: no
      }
      {
        name: trans
        src: top
        sw_cg: hint
        unique: yes
      }
      {
        name: infra
        src: top
        sw_cg: no
      }
      {
        name: secure
        src: top
        sw_cg: no
      }
      {
        name: peri
        src: top
        sw_cg: yes
        unique: no
      }
      {
        name: timers
        src: top
        sw_cg: no
      }
    ]
  }
  resets:
  {
    hier_paths:
    {
      top: rstmgr_aon_resets.
      ext: ""
      lpg: rstmgr_aon_rst_en.
    }
    nodes:
    [
      {
        name: por_aon
        gen: false
        type: top
        clk: aon
      }
      {
        name: lc_src
        gen: false
        type: int
        clk: io_div4
      }
      {
        name: sys_src
        gen: false
        type: int
        clk: io_div4
      }
      {
        name: por
        gen: true
        type: top
        parent: por_aon
        clk: main
      }
      {
        name: por_io
        gen: true
        type: top
        parent: por_aon
        clk: io
      }
      {
        name: por_io_div2
        gen: true
        type: top
        parent: por_aon
        clk: io_div2
      }
      {
        name: por_io_div4
        gen: true
        type: top
        parent: por_aon
        clk: io_div4
      }
      {
        name: por_usb
        gen: true
        type: top
        parent: por_aon
        clk: usb
      }
      {
        name: lc
        gen: true
        type: top
        parent: lc_src
        clk: main
      }
      {
        name: lc_aon
        gen: true
        type: top
        parent: lc_src
        clk: aon
      }
      {
        name: lc_io
        gen: true
        type: top
        parent: lc_src
        clk: io
      }
      {
        name: lc_io_div2
        gen: true
        type: top
        parent: lc_src
        clk: io_div2
      }
      {
        name: lc_io_div4
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
      }
      {
        name: lc_usb
        gen: true
        type: top
        parent: lc_src
        clk: usb
      }
      {
        name: sys
        gen: true
        type: top
        parent: sys_src
        clk: main
      }
      {
        name: sys_io_div4
        gen: true
        type: top
        parent: sys_src
        clk: io_div4
      }
      {
        name: spi_device
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
        sw: true
      }
      {
        name: spi_host0
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
        sw: true
      }
      {
        name: spi_host1
        gen: true
        type: top
        parent: lc_src
        clk: io_div2
        sw: true
      }
      {
        name: usb
        gen: true
        type: top
        parent: lc_src
        clk: usb
        sw: true
      }
      {
        name: usb_aon
        gen: true
        type: top
        parent: lc_src
        clk: aon
        sw: true
      }
      {
        name: i2c0
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
        sw: true
      }
      {
        name: i2c1
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
        sw: true
      }
      {
        name: i2c2
        gen: true
        type: top
        parent: lc_src
        clk: io_div4
        sw: true
      }
    ]
  }
  num_cores: "1"
  module:
  [
    {
      name: uart0
      type: uart
      clock_srcs:
      {
        clk_i: io_div4
      }
      clock_group: peri
      reset_connections:
      {
        rst_ni: lc_io_div4
      }
      base_addr: 0x30010000
    }
    {
      name: gpio
      type: gpio
      clock_srcs:
      {
        clk_i: io_div4
      }
      clock_group: peri
      reset_connections:
      {
        rst_ni: lc_io_div4
      }
      base_addr: 0x30000000
      param_decl:
      {
        GpioAsyncOn: "1"
      }
    }
    {
      name: spi_device
      type: spi_device
      clock_srcs:
      {
        clk_i: io_div4
        scan_clk_i: io_div2
      }
      clock_group: peri
      reset_connections:
      {
        rst_ni: spi_device
      }
      base_addr: 0x30310000
    }
    {
      name: i2c0
      type: i2c
      clock_srcs:
      {
        clk_i: io_div4
      }
      clock_group: peri
      reset_connections:
      {
        rst_ni: i2c0
      }
      base_addr: 0x30080000
    }
    {
      name: rv_timer
      type: rv_timer
      clock_srcs:
      {
        clk_i: io_div4
      }
      clock_group: timers
      reset_connections:
      {
        rst_ni: lc_io_div4
      }
      base_addr: 0x30100000
    }
    {
      name: otp_ctrl
      type: otp_ctrl
      clock_srcs:
      {
        clk_i: io_div4
        clk_edn_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_edn_ni: lc
      }
      base_addrs:
      {
        core: 0x30130000
        prim: 0x30134000
      }
    }
    {
      name: lc_ctrl
      type: lc_ctrl
      clock_srcs:
      {
        clk_i: io_div4
        clk_kmac_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_kmac_ni: lc
      }
      base_addr: 0x30140000
      param_decl:
      {
        SecVolatileRawUnlockEn: top_pkg::SecVolatileRawUnlockEn
        SiliconCreatorId: 16'h 0001
        ProductId: 16'h 4000
        RevisionId: 8'h 01
      }
    }
    {
      name: alert_handler
      type: alert_handler
      clock_srcs:
      {
        clk_i: io_div4
        clk_edn_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_edn_ni: lc
      }
      base_addr: 0x30150000
      attr: ipgen
    }
    {
      name: spi_host0
      type: spi_host
      clock_srcs:
      {
        clk_i: io_div4
      }
      clock_group: peri
      reset_connections:
      {
        rst_ni: spi_host0
      }
      base_addr: 0x30300000
    }
    {
      name: pwrmgr_aon
      type: pwrmgr
      clock_group: powerup
      clock_srcs:
      {
        clk_i: io_div4
        clk_slow_i: aon
        clk_lc_i: io_div4
        clk_esc_i:
        {
          clock: io_div4
          group: secure
        }
      }
      reset_connections:
      {
        rst_ni:
        {
          name: por_io_div4
          domain: Aon
        }
        rst_main_ni:
        {
          name: por_aon
          domain: "0"
        }
        rst_lc_ni:
        {
          name: lc_io_div4
          domain: Aon
        }
        rst_esc_ni:
        {
          name: lc_io_div4
          domain: Aon
        }
        rst_slow_ni:
        {
          name: por_aon
          domain: Aon
        }
      }
      domain:
      [
        Aon
        "0"
      ]
      base_addr: 0x30400000
      attr: templated
    }
    {
      name: rstmgr_aon
      type: rstmgr
      clock_srcs:
      {
        clk_i:
        {
          clock: io_div4
          group: powerup
        }
        clk_por_i: io_div4
        clk_aon_i: aon
        clk_main_i: main
        clk_io_i: io
        clk_usb_i: usb
        clk_io_div2_i: io_div2
        clk_io_div4_i: io_div4
      }
      clock_group: powerup
      reset_connections:
      {
        rst_ni:
        {
          name: lc_io_div4
          domain: Aon
        }
        rst_por_ni:
        {
          name: por_io_div4
          domain: Aon
        }
      }
      domain:
      [
        Aon
        "0"
      ]
      base_addr: 0x30410000
      attr: templated
    }
    {
      name: clkmgr_aon
      type: clkmgr
      clock_srcs:
      {
        clk_i: io_div4
        clk_main_i:
        {
          group: ast
          clock: main
        }
        clk_io_i:
        {
          group: ast
          clock: io
        }
        clk_usb_i:
        {
          group: ast
          clock: usb
        }
        clk_aon_i:
        {
          group: ast
          clock: aon
        }
      }
      clock_group: powerup
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_aon_ni: lc_aon
        rst_io_ni: lc_io
        rst_io_div2_ni: lc_io_div2
        rst_io_div4_ni: lc_io_div4
        rst_main_ni: lc
        rst_usb_ni: lc_usb
        rst_root_ni: por_io_div4
        rst_root_io_ni: por_io
        rst_root_io_div2_ni: por_io_div2
        rst_root_io_div4_ni: por_io_div4
        rst_root_main_ni: por
        rst_root_usb_ni: por_usb
      }
      domain:
      [
        Aon
      ]
      base_addr: 0x30420000
      attr: templated
    }
    {
      name: pinmux_aon
      type: pinmux
      clock_srcs:
      {
        clk_i: io_div4
        clk_aon_i: aon
      }
      clock_group: powerup
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_aon_ni: lc_aon
        rst_sys_ni: sys_io_div4
      }
      domain:
      [
        Aon
      ]
      base_addr: 0x30460000
      attr: templated
      param_decl:
      {
        UsbWkupModuleEn: "1"
        HwStrapSamplingEn: "0"
        SecVolatileRawUnlockEn: top_pkg::SecVolatileRawUnlockEn
      }
    }
    {
      name: aon_timer_aon
      type: aon_timer
      clock_srcs:
      {
        clk_i: io_div4
        clk_aon_i: aon
      }
      clock_group: timers
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_aon_ni: lc_aon
      }
      domain:
      [
        Aon
      ]
      base_addr: 0x30470000
    }
    {
      name: ast
      type: ast
      clock_srcs:
      {
        clk_ast_tlul_i:
        {
          clock: io_div4
          group: infra
        }
        clk_ast_adc_i:
        {
          clock: aon
          group: peri
        }
        clk_ast_alert_i:
        {
          clock: io_div4
          group: secure
        }
        clk_ast_es_i:
        {
          clock: main
          group: secure
        }
        clk_ast_rng_i:
        {
          clock: main
          group: secure
        }
        clk_ast_usb_i:
        {
          clock: usb
          group: peri
        }
      }
      clock_group: secure
      reset_connections:
      {
        rst_ast_tlul_ni:
        {
          name: lc_io_div4
          domain: "0"
        }
        rst_ast_adc_ni:
        {
          name: lc_aon
          domain: Aon
        }
        rst_ast_alert_ni:
        {
          name: lc_io_div4
          domain: "0"
        }
        rst_ast_es_ni:
        {
          name: lc
          domain: "0"
        }
        rst_ast_rng_ni:
        {
          name: lc
          domain: "0"
        }
        rst_ast_usb_ni:
        {
          name: usb
          domain: "0"
        }
      }
      domain:
      [
        Aon
        "0"
      ]
      base_addr: 0x30480000
      attr: reggen_only
    }
    {
      name: sram_ctrl_ret_aon
      type: sram_ctrl
      clock_srcs:
      {
        clk_i: io_div4
        clk_otp_i: io_div4
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc_io_div4
        rst_otp_ni: lc_io_div4
      }
      domain:
      [
        Aon
      ]
      param_decl:
      {
        InstrExec: "0"
      }
      base_addrs:
      {
        regs: 0x30500000
        ram: 0x40600000
      }
      memory:
      {
        ram:
        {
          label: ram_ret_aon
          swaccess: rw
          data_intg_passthru: "true"
          exec: True
          byte_write: True
          size: 0x1000
        }
      }
    }
    {
      name: rv_dm
      type: rv_dm
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: sys
      }
      base_addrs:
      {
        mem: 0x40000
        regs: 0x21200000
      }
    }
    {
      name: rv_plic
      type: rv_plic
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x28000000
      attr: ipgen
    }
    {
      name: aes
      type: aes
      clock_srcs:
      {
        clk_i: main
        clk_edn_i: main
      }
      clock_group: trans
      reset_connections:
      {
        rst_ni: lc
        rst_edn_ni: lc
      }
      param_decl:
      {
        SecMasking: "1"
        SecSBoxImpl: aes_pkg::SBoxImplDom
      }
      base_addr: 0x21100000
    }
    {
      name: hmac
      type: hmac
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: trans
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x21110000
    }
    {
      name: kmac
      type: kmac
      param_decl:
      {
        EnMasking: "1"
      }
      clock_srcs:
      {
        clk_i: main
        clk_edn_i: main
      }
      clock_group: trans
      reset_connections:
      {
        rst_ni: lc
        rst_edn_ni: lc
      }
      base_addr: 0x21120000
    }
    {
      name: otbn
      type: otbn
      clock_srcs:
      {
        clk_i:
        {
          clock: main
          group: trans
        }
        clk_edn_i:
        {
          clock: main
          group: secure
        }
        clk_otp_i:
        {
          clock: io_div4
          group: secure
        }
      }
      clock_group: trans
      reset_connections:
      {
        rst_ni: lc
        rst_edn_ni: lc
        rst_otp_ni: lc_io_div4
      }
      base_addr: 0x21130000
    }
    {
      name: keymgr
      type: keymgr
      clock_srcs:
      {
        clk_i: main
        clk_edn_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
        rst_edn_ni: lc
      }
      base_addr: 0x21140000
      param_decl:
      {
        UseOtpSeedsInsteadOfFlash: "1"
      }
    }
    {
      name: csrng
      type: csrng
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x21150000
    }
    {
      name: entropy_src
      type: entropy_src
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x21160000
    }
    {
      name: edn0
      type: edn
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x21170000
    }
    {
      name: edn1
      type: edn
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: secure
      reset_connections:
      {
        rst_ni: lc
      }
      base_addr: 0x21180000
    }
    {
      name: sram_ctrl_main
      type: sram_ctrl
      clock_srcs:
      {
        clk_i: main
        clk_otp_i: io_div4
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc
        rst_otp_ni: lc_io_div4
      }
      param_decl:
      {
        InstrExec: "1"
      }
      base_addrs:
      {
        regs: 0x211c0000
        ram: 0x10000000
      }
      memory:
      {
        ram:
        {
          label: ram_main
          swaccess: rw
          data_intg_passthru: "true"
          exec: True
          byte_write: True
          size: 0x10000
        }
      }
    }
    {
      name: sram_ctrl_mbox
      type: sram_ctrl
      clock_srcs:
      {
        clk_i: main
        clk_otp_i: io_div4
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc
        rst_otp_ni: lc_io_div4
      }
      param_decl:
      {
        InstrExec: "0"
      }
      base_addrs:
      {
        regs: 0x211d0000
        ram: 0x11000000
      }
      memory:
      {
        ram:
        {
          label: ram_mbox
          swaccess: rw
          data_intg_passthru: "true"
          exec: False
          byte_write: True
          size: 0x1000
        }
      }
    }
    {
      name: rom_ctrl0
      type: rom_ctrl
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc
      }
      base_addrs:
      {
        rom: 0x0
        regs: 0x211e0000
      }
      memory:
      {
        rom:
        {
          label: rom0
          swaccess: ro
          data_intg_passthru: True
          exec: True
          byte_write: False
          size: 0x8000
        }
      }
      param_decl:
      {
        SecDisableScrambling: 1'b0
      }
    }
    {
      name: rom_ctrl1
      type: rom_ctrl
      clock_srcs:
      {
        clk_i: main
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc
      }
      base_addrs:
      {
        rom: 0x10000
        regs: 0x211e1000
      }
      memory:
      {
        rom:
        {
          label: rom1
          swaccess: ro
          data_intg_passthru: True
          exec: True
          byte_write: False
          size: 0x10000
        }
      }
      param_decl:
      {
        SecDisableScrambling: 1'b0
      }
    }
    {
      name: rv_core_ibex
      type: rv_core_ibex
      param_decl:
      {
        PMPEnable: "1"
        PMPGranularity: "0"
        PMPNumRegions: "16"
        MHPMCounterNum: "10"
        MHPMCounterWidth: "32"
        RV32E: "0"
        RV32M: ibex_pkg::RV32MSingleCycle
        RV32B: ibex_pkg::RV32BOTEarlGrey
        RegFile: ibex_pkg::RegFileFF
        BranchTargetALU: "1"
        WritebackStage: "1"
        ICache: "1"
        ICacheECC: "1"
        ICacheScramble: "1"
        BranchPredictor: "0"
        DbgTriggerEn: "1"
        DbgHwBreakNum: "4"
        SecureIbex: "1"
        DmHaltAddr: tl_main_pkg::ADDR_SPACE_RV_DM__MEM + dm::HaltAddress[31:0]
        DmExceptionAddr: tl_main_pkg::ADDR_SPACE_RV_DM__MEM + dm::ExceptionAddress[31:0]
        PipeLine: "0"
      }
      clock_srcs:
      {
        clk_i: main
        clk_edn_i: main
        clk_esc_i:
        {
          clock: io_div4
          group: secure
        }
        clk_otp_i:
        {
          clock: io_div4
          group: secure
        }
      }
      clock_group: infra
      reset_connections:
      {
        rst_ni: lc
        rst_edn_ni: lc
        rst_esc_ni: lc_io_div4
        rst_otp_ni: lc_io_div4
      }
      base_addr: 0x211f0000
    }
  ]
  memory: []
  port:
  [
    {
      name: ast
      inter_signal_list:
      [
        {
          struct: edn
          type: req_rsp
          name: edn
          act: rsp
          package: edn_pkg
        }
        {
          struct: lc_tx
          type: uni
          name: lc_dft_en
          act: req
          package: lc_ctrl_pkg
        }
        {
          struct: lc_tx
          type: uni
          name: lc_hw_debug_en
          act: req
          package: lc_ctrl_pkg
        }
        {
          struct: ram_1p_cfg
          package: prim_ram_1p_pkg
          type: uni
          name: ram_1p_cfg
          act: rcv
        }
        {
          struct: ram_2p_cfg
          package: prim_ram_2p_pkg
          type: uni
          name: spi_ram_2p_cfg
          act: rcv
        }
        {
          struct: ram_2p_cfg
          package: prim_ram_2p_pkg
          type: uni
          name: usb_ram_2p_cfg
          act: rcv
        }
        {
          struct: rom_cfg
          package: prim_rom_pkg
          type: uni
          name: rom_cfg
          act: rcv
        }
        {
          struct: ast_obs_ctrl
          type: uni
          name: obs_ctrl
          act: rcv
          package: ast_pkg
        }
      ]
    }
  ]
  inter_module:
  {
    connect:
    {
      ast.obs_ctrl:
      [
        otp_ctrl.obs_ctrl
      ]
      ast.ram_1p_cfg:
      [
        otbn.ram_cfg
        sram_ctrl_main.cfg
        sram_ctrl_ret_aon.cfg
        sram_ctrl_mbox.cfg
        rv_core_ibex.ram_cfg
      ]
      ast.spi_ram_2p_cfg:
      [
        spi_device.ram_cfg
      ]
      ast.usb_ram_2p_cfg: []
      ast.rom_cfg:
      [
        rom_ctrl0.rom_cfg
        rom_ctrl1.rom_cfg
      ]
      alert_handler.crashdump:
      [
        rstmgr_aon.alert_dump
      ]
      alert_handler.esc_rx:
      [
        rv_core_ibex.esc_rx
        lc_ctrl.esc_scrap_state0_rx
        lc_ctrl.esc_scrap_state1_rx
        pwrmgr_aon.esc_rst_rx
      ]
      alert_handler.esc_tx:
      [
        rv_core_ibex.esc_tx
        lc_ctrl.esc_scrap_state0_tx
        lc_ctrl.esc_scrap_state1_tx
        pwrmgr_aon.esc_rst_tx
      ]
      aon_timer_aon.nmi_wdog_timer_bark:
      [
        rv_core_ibex.nmi_wdog
      ]
      csrng.csrng_cmd:
      [
        edn0.csrng_cmd
        edn1.csrng_cmd
      ]
      otp_ctrl.sram_otp_key:
      [
        sram_ctrl_main.sram_otp_key
        sram_ctrl_ret_aon.sram_otp_key
        sram_ctrl_mbox.sram_otp_key
        rv_core_ibex.icache_otp_key
      ]
      pwrmgr_aon.pwr_flash: []
      pwrmgr_aon.pwr_rst:
      [
        rstmgr_aon.pwr
      ]
      pwrmgr_aon.pwr_clk:
      [
        clkmgr_aon.pwr
      ]
      pwrmgr_aon.pwr_otp:
      [
        otp_ctrl.pwr_otp
      ]
      pwrmgr_aon.pwr_lc:
      [
        lc_ctrl.pwr_lc
      ]
      pwrmgr_aon.strap:
      [
        pinmux_aon.strap_en
      ]
      pwrmgr_aon.low_power:
      [
        pinmux_aon.sleep_en
        aon_timer_aon.sleep_mode
      ]
      pwrmgr_aon.fetch_en:
      [
        rv_core_ibex.pwrmgr_cpu_en
      ]
      pwrmgr_aon.rom_ctrl:
      [
        rom_ctrl0.pwrmgr_data
        rom_ctrl1.pwrmgr_data
      ]
      keymgr.rom_digest:
      [
        rom_ctrl0.keymgr_data
        rom_ctrl1.keymgr_data
      ]
      lc_ctrl.lc_flash_rma_req:
      [
        otbn.lc_rma_req
      ]
      otbn.lc_rma_ack:
      [
        lc_ctrl.lc_flash_rma_ack
      ]
      pinmux_aon.usbdev_wake_detect_active: []
      edn0.edn:
      [
        keymgr.edn
        otp_ctrl.edn
        ast.edn
        kmac.entropy
        alert_handler.edn
        aes.edn
        otbn.edn_urnd
        rv_core_ibex.edn
      ]
      edn1.edn:
      [
        otbn.edn_rnd
      ]
      otp_ctrl.otbn_otp_key:
      [
        otbn.otbn_otp_key
      ]
      otp_ctrl.otp_keymgr_key:
      [
        keymgr.otp_key
      ]
      keymgr.aes_key:
      [
        aes.keymgr_key
      ]
      keymgr.kmac_key:
      [
        kmac.keymgr_key
      ]
      keymgr.otbn_key:
      [
        otbn.keymgr_key
      ]
      kmac.app:
      [
        keymgr.kmac_data
        lc_ctrl.kmac_data
        rom_ctrl0.kmac_data
        rom_ctrl1.kmac_data
      ]
      kmac.en_masking:
      [
        keymgr.kmac_en_masking
      ]
      clkmgr_aon.idle: []
      otp_ctrl.otp_lc_data:
      [
        lc_ctrl.otp_lc_data
      ]
      lc_ctrl.lc_otp_program:
      [
        otp_ctrl.lc_otp_program
      ]
      lc_ctrl.lc_otp_vendor_test:
      [
        otp_ctrl.lc_otp_vendor_test
      ]
      lc_ctrl.lc_keymgr_div:
      [
        keymgr.lc_keymgr_div
      ]
      lc_ctrl.strap_en_override:
      [
        pinmux_aon.strap_en_override
      ]
      lc_ctrl.lc_dft_en:
      [
        otp_ctrl.lc_dft_en
        pinmux_aon.lc_dft_en
        ast.lc_dft_en
        pwrmgr_aon.lc_dft_en
      ]
      lc_ctrl.lc_hw_debug_en:
      [
        sram_ctrl_main.lc_hw_debug_en
        pinmux_aon.lc_hw_debug_en
        ast.lc_hw_debug_en
        csrng.lc_hw_debug_en
        rv_dm.lc_hw_debug_en
        clkmgr_aon.lc_hw_debug_en
        pwrmgr_aon.lc_hw_debug_en
      ]
      lc_ctrl.lc_cpu_en:
      [
        rv_core_ibex.lc_cpu_en
      ]
      lc_ctrl.lc_keymgr_en:
      [
        keymgr.lc_keymgr_en
      ]
      lc_ctrl.lc_escalate_en:
      [
        aes.lc_escalate_en
        kmac.lc_escalate_en
        otbn.lc_escalate_en
        otp_ctrl.lc_escalate_en
        sram_ctrl_main.lc_escalate_en
        sram_ctrl_ret_aon.lc_escalate_en
        sram_ctrl_mbox.lc_escalate_en
        aon_timer_aon.lc_escalate_en
        pinmux_aon.lc_escalate_en
      ]
      lc_ctrl.lc_check_byp_en:
      [
        otp_ctrl.lc_check_byp_en
        pinmux_aon.lc_check_byp_en
      ]
      lc_ctrl.lc_clk_byp_req:
      [
        clkmgr_aon.lc_clk_byp_req
      ]
      lc_ctrl.lc_clk_byp_ack:
      [
        clkmgr_aon.lc_clk_byp_ack
      ]
      lc_ctrl.lc_creator_seed_sw_rw_en:
      [
        otp_ctrl.lc_creator_seed_sw_rw_en
      ]
      lc_ctrl.lc_seed_hw_rd_en:
      [
        otp_ctrl.lc_seed_hw_rd_en
      ]
      rv_plic.msip:
      [
        rv_core_ibex.irq_software
      ]
      rv_plic.irq:
      [
        rv_core_ibex.irq_external
      ]
      rv_dm.debug_req:
      [
        rv_core_ibex.debug_req
      ]
      rv_core_ibex.crash_dump:
      [
        rstmgr_aon.cpu_dump
      ]
      rv_core_ibex.pwrmgr:
      [
        pwrmgr_aon.pwr_cpu
      ]
      spi_device.passthrough:
      [
        spi_host0.passthrough
      ]
      rv_dm.ndmreset_req:
      [
        pwrmgr_aon.ndmreset_req
      ]
      rstmgr_aon.sw_rst_req:
      [
        pwrmgr_aon.sw_rst_req
      ]
    }
    top:
    [
      clkmgr_aon.clocks
      clkmgr_aon.cg_en
      rstmgr_aon.resets
      rstmgr_aon.rst_en
      rv_core_ibex.irq_timer
      rv_core_ibex.hart_id
      rv_core_ibex.boot_addr
      otp_ctrl.otp_broadcast
      lc_ctrl.otp_device_id
      lc_ctrl.otp_manuf_state
      keymgr.otp_device_id
      sram_ctrl_main.otp_en_sram_ifetch
    ]
    external:
    {
      ast.edn: ""
      ast.lc_dft_en: ""
      ast.lc_hw_debug_en: ""
      ast.obs_ctrl: obs_ctrl
      ast.ram_1p_cfg: ram_1p_cfg
      ast.spi_ram_2p_cfg: spi_ram_2p_cfg
      ast.usb_ram_2p_cfg: usb_ram_2p_cfg
      ast.rom_cfg: rom_cfg
      clkmgr_aon.jitter_en: clk_main_jitter_en
      clkmgr_aon.io_clk_byp_req: io_clk_byp_req
      clkmgr_aon.io_clk_byp_ack: io_clk_byp_ack
      clkmgr_aon.all_clk_byp_req: all_clk_byp_req
      clkmgr_aon.all_clk_byp_ack: all_clk_byp_ack
      clkmgr_aon.hi_speed_sel: hi_speed_sel
      clkmgr_aon.div_step_down_req: div_step_down_req
      clkmgr_aon.calib_rdy: calib_rdy
      csrng.entropy_src_hw_if: entropy_src_hw_if
      lc_ctrl.dmi_tl_h2d: lc_ctrl_dmi_h2d
      lc_ctrl.dmi_tl_d2h: lc_ctrl_dmi_d2h
      rv_dm.dmi_tl_h2d: rv_dm_dmi_h2d
      rv_dm.dmi_tl_d2h: rv_dm_dmi_d2h
      pwrmgr_aon.strap: pwrmgr_strap_en
      rv_dm.pinmux_hw_debug_en: rv_pinmux_hw_debug_en
      peri.tl_ast: ast_tl
      pinmux_aon.dft_strap_test: dft_strap_test
      pinmux_aon.dft_hold_tap_sel: dft_hold_tap_sel
      pinmux_aon.usb_dppullup_en: usb_dp_pullup_en
      pinmux_aon.usb_dnpullup_en: usb_dn_pullup_en
      pwrmgr_aon.pwr_ast: pwrmgr_ast
      otp_ctrl.otp_ast_pwr_seq: ""
      otp_ctrl.otp_ast_pwr_seq_h: ""
      otp_ctrl.otp_ext_voltage_h: otp_ext_voltage_h
      otp_ctrl.otp_obs: otp_obs
      rstmgr_aon.por_n: por_n
      rv_core_ibex.fpga_info: fpga_info
      spi_device.sck_monitor: sck_monitor
    }
  }
  xbar:
  [
    {
      name: main
      clock_srcs:
      {
        clk_main_i: main
        clk_fixed_i: io_div4
        clk_usb_i: usb
        clk_spi_host1_i: io_div2
      }
      clock_group: infra
      reset: lc
      reset_connections:
      {
        rst_main_ni: lc
        rst_fixed_ni: lc_io_div4
        rst_usb_ni: lc_usb
        rst_spi_host1_ni: lc_io_div2
      }
    }
    {
      name: peri
      clock_srcs:
      {
        clk_peri_i: io_div4
      }
      clock_group: infra
      reset: lc_io_div4
      reset_connections:
      {
        rst_peri_ni: lc_io_div4
      }
    }
  ]
  pinout:
  {
    banks:
    [
      VCC
      AVCC
      VIOA
      VIOB
    ]
    pads:
    [
      {
        name: SPI_Host_BootRoT_CLK
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host clock
      }
      {
        name: SPI_Host_BootRoT_CSL
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host chip select
      }
      {
        name: SPI_Host_BootRoT_D0
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host data
      }
      {
        name: SPI_Host_BootRoT_D1
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host data
      }
      {
        name: SPI_Host_BootRoT_D2
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host data
      }
      {
        name: SPI_Host_BootRoT_D3
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI host data
      }
      {
        name: SPI_Device_FWLoad_CLK
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI device clock
      }
      {
        name: SPI_Device_FWLoad_CS_L
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI device chip select
      }
      {
        name: SPI_Device_FWLoad_MOSI
        type: BidirStd
        bank: VCC
        connection: muxed
        desc: SPI device data input
      }
      {
        name: SPI_Device_FWLoad_MISO
        type: BidirStd
        bank: VCC
        connection: muxed
        desc: SPI device data output
      }
      {
        name: UART_ShareROT_FWDebug_TX
        type: BidirStd
        bank: VCC
        connection: direct
        desc: SPI device data output
      }
      {
        name: I2C_BootRoT_SCL
        type: BidirStd
        bank: VCC
        connection: direct
        desc: I2C direct PAD
      }
      {
        name: I2C_BootRoT_SDA
        type: BidirStd
        bank: VCC
        connection: direct
        desc: I2C direct PAD
      }
      {
        name: SPI_Host_BootRoT_RESET_L
        type: BidirStd
        bank: VCC
        connection: muxed
        desc: SPI host reset device
      }
    ]
  }
  pinmux:
  {
    signals:
    [
      {
        instance: spi_host0
        port: sck
        connection: direct
        pad: SPI_Host_BootRoT_CLK
        desc: ""
      }
      {
        instance: spi_host0
        port: csb
        connection: direct
        pad: SPI_Host_BootRoT_CSL
        desc: ""
      }
      {
        instance: spi_host0
        port: sd[0]
        connection: direct
        pad: SPI_Host_BootRoT_D0
        desc: ""
      }
      {
        instance: spi_host0
        port: sd[1]
        connection: direct
        pad: SPI_Host_BootRoT_D1
        desc: ""
      }
      {
        instance: spi_host0
        port: sd[2]
        connection: direct
        pad: SPI_Host_BootRoT_D2
        desc: ""
      }
      {
        instance: spi_host0
        port: sd[3]
        connection: direct
        pad: SPI_Host_BootRoT_D3
        desc: ""
      }
      {
        instance: spi_device
        port: sck
        connection: direct
        pad: SPI_Device_FWLoad_CLK
        desc: ""
      }
      {
        instance: spi_device
        port: csb
        connection: direct
        pad: SPI_Device_FWLoad_CS_L
        desc: ""
      }
      {
        instance: spi_device
        port: sd[0]
        connection: muxed
        pad: ""
        desc: ""
      }
      {
        instance: spi_device
        port: sd[1]
        connection: muxed
        pad: ""
        desc: ""
      }
      {
        instance: spi_device
        port: sd[2]
        connection: muxed
        pad: ""
        desc: ""
      }
      {
        instance: spi_device
        port: sd[3]
        connection: muxed
        pad: ""
        desc: ""
      }
      {
        instance: uart0
        port: tx
        connection: direct
        pad: UART_ShareROT_FWDebug_TX
        desc: ""
      }
      {
        instance: i2c0
        port: scl
        connection: direct
        pad: I2C_BootRoT_SCL
        desc: ""
      }
      {
        instance: i2c0
        port: sda
        connection: direct
        pad: I2C_BootRoT_SDA
        desc: ""
      }
      {
        instance: gpio
        port: ""
        connection: muxed
        pad: ""
        desc: ""
      }
    ]
    num_wkup_detect: 8
    wkup_cnt_width: 8
  }
  targets:
  [
    {
      name: rot
      pinout:
      {
        remove_ports: []
        remove_pads: []
        add_pads: []
      }
      pinmux:
      {
        special_signals: []
      }
    }
  ]
}