// SPDX-FileCopyrightText: Copyright (c) 2022 by Rivos Inc.
// Confidential and proprietary, see LICENSE for details.
// SPDX-License-Identifier: LicenseRef-Rivos-Internal-Only

// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package pinmux_reg_pkg;

  // Param list
  parameter int AttrDw = 13;
  parameter int NMioPeriphIn = 36;
  parameter int NMioPeriphOut = 36;
  parameter int NMioPads = 3;
  parameter int NDgpioPads = 9;
  parameter int NDi3cPads = 2;
  parameter int NWkupDetect = 8;
  parameter int WkupCntWidth = 8;
  parameter int NumAlerts = 1;

  // Address widths within the block
  parameter int BlockAw = 10;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic        q;
    logic        qe;
  } pinmux_reg2hw_alert_test_reg_t;  // register struct

  typedef struct packed {
    logic [2:0]  q;
  } pinmux_reg2hw_mio_periph_insel_mreg_t;  // register struct

  typedef struct packed {
    logic [5:0]  q;
  } pinmux_reg2hw_mio_outsel_mreg_t;  // register struct

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } PUEN;
    struct packed {
      logic        q;
      logic        qe;
    } PDEN;
    struct packed {
      logic        q;
      logic        qe;
    } SMTEN;
    struct packed {
      logic [2:0]  q;
      logic        qe;
    } DRV;
  } pinmux_reg2hw_mio_pad_attr_mreg_t;  // register struct

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } PUEN;
    struct packed {
      logic        q;
      logic        qe;
    } PDEN;
    struct packed {
      logic        q;
      logic        qe;
    } SMTEN;
    struct packed {
      logic [2:0]  q;
      logic        qe;
    } DRV;
  } pinmux_reg2hw_dio_pad_attr_mreg_t;  // register struct

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } PUEN;
    struct packed {
      logic        q;
      logic        qe;
    } PDEN;
    struct packed {
      logic        q;
      logic        qe;
    } FILTEN;
    struct packed {
      logic        q;
      logic        qe;
    } DLYEN;
    struct packed {
      logic        q;
      logic        qe;
    } I2CEN;
    struct packed {
      logic        q;
      logic        qe;
    } RINTEN;
  } pinmux_reg2hw_di3c_pad_attr_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_mio_pad_sleep_status_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_mio_pad_sleep_en_mreg_t;  // register struct

  typedef struct packed {
    logic [1:0]  q;
  } pinmux_reg2hw_mio_pad_sleep_mode_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_dio_pad_sleep_status_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_dio_pad_sleep_en_mreg_t;  // register struct

  typedef struct packed {
    logic [1:0]  q;
  } pinmux_reg2hw_dio_pad_sleep_mode_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_di3c_pad_sleep_status_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_di3c_pad_sleep_en_mreg_t;  // register struct

  typedef struct packed {
    logic [1:0]  q;
  } pinmux_reg2hw_di3c_pad_sleep_mode_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_wkup_detector_en_mreg_t;  // register struct

  typedef struct packed {
    struct packed {
      logic [2:0]  q;
    } MODE;
    struct packed {
      logic        q;
    } FILTER;
    struct packed {
      logic        q;
    } MIODIO;
  } pinmux_reg2hw_wkup_detector_mreg_t;  // register struct

  typedef struct packed {
    logic [7:0]  q;
  } pinmux_reg2hw_wkup_detector_cnt_th_mreg_t;  // register struct

  typedef struct packed {
    logic [3:0]  q;
  } pinmux_reg2hw_wkup_detector_padsel_mreg_t;  // register struct

  typedef struct packed {
    logic        q;
  } pinmux_reg2hw_wkup_cause_mreg_t;  // register struct

  typedef struct packed {
    struct packed {
      logic        d;
    } PUEN; // field struct type2
    struct packed {
      logic        d;
    } PDEN; // field struct type2
    struct packed {
      logic        d;
    } SMTEN; // field struct type2
    struct packed {
      logic [2:0]  d;
    } DRV; // field struct type2
  } pinmux_hw2reg_mio_pad_attr_mreg_t;

  typedef struct packed {
    struct packed {
      logic        d;
    } PUEN; // field struct type2
    struct packed {
      logic        d;
    } PDEN; // field struct type2
    struct packed {
      logic        d;
    } SMTEN; // field struct type2
    struct packed {
      logic [2:0]  d;
    } DRV; // field struct type2
  } pinmux_hw2reg_dio_pad_attr_mreg_t;

  typedef struct packed {
    struct packed {
      logic        d;
    } PUEN; // field struct type2
    struct packed {
      logic        d;
    } PDEN; // field struct type2
    struct packed {
      logic        d;
    } FILTEN; // field struct type2
    struct packed {
      logic        d;
    } DLYEN; // field struct type2
    struct packed {
      logic        d;
    } I2CEN; // field struct type2
    struct packed {
      logic        d;
    } RINTEN; // field struct type2
  } pinmux_hw2reg_di3c_pad_attr_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } pinmux_hw2reg_mio_pad_sleep_status_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } pinmux_hw2reg_dio_pad_sleep_status_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } pinmux_hw2reg_di3c_pad_sleep_status_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } pinmux_hw2reg_wkup_cause_mreg_t;

  // Register -> HW type (packed registers)
  typedef struct packed {
    pinmux_reg2hw_alert_test_reg_t ALERT_TEST; // [479:478]
    pinmux_reg2hw_mio_periph_insel_mreg_t [35:0] MIO_PERIPH_INSEL; // [477:370]
    pinmux_reg2hw_mio_outsel_mreg_t [2:0] MIO_OUTSEL; // [369:352]
    pinmux_reg2hw_mio_pad_attr_mreg_t [2:0] MIO_PAD_ATTR; // [351:322]
    pinmux_reg2hw_dio_pad_attr_mreg_t [8:0] DIO_PAD_ATTR; // [321:232]
    pinmux_reg2hw_di3c_pad_attr_mreg_t [1:0] DI3C_PAD_ATTR; // [231:208]
    pinmux_reg2hw_mio_pad_sleep_status_mreg_t [2:0] MIO_PAD_SLEEP_STATUS; // [207:205]
    pinmux_reg2hw_mio_pad_sleep_en_mreg_t [2:0] MIO_PAD_SLEEP_EN; // [204:202]
    pinmux_reg2hw_mio_pad_sleep_mode_mreg_t [2:0] MIO_PAD_SLEEP_MODE; // [201:196]
    pinmux_reg2hw_dio_pad_sleep_status_mreg_t [8:0] DIO_PAD_SLEEP_STATUS; // [195:187]
    pinmux_reg2hw_dio_pad_sleep_en_mreg_t [8:0] DIO_PAD_SLEEP_EN; // [186:178]
    pinmux_reg2hw_dio_pad_sleep_mode_mreg_t [8:0] DIO_PAD_SLEEP_MODE; // [177:160]
    pinmux_reg2hw_di3c_pad_sleep_status_mreg_t [1:0] DI3C_PAD_SLEEP_STATUS; // [159:158]
    pinmux_reg2hw_di3c_pad_sleep_en_mreg_t [1:0] DI3C_PAD_SLEEP_EN; // [157:156]
    pinmux_reg2hw_di3c_pad_sleep_mode_mreg_t [1:0] DI3C_PAD_SLEEP_MODE; // [155:152]
    pinmux_reg2hw_wkup_detector_en_mreg_t [7:0] WKUP_DETECTOR_EN; // [151:144]
    pinmux_reg2hw_wkup_detector_mreg_t [7:0] WKUP_DETECTOR; // [143:104]
    pinmux_reg2hw_wkup_detector_cnt_th_mreg_t [7:0] WKUP_DETECTOR_CNT_TH; // [103:40]
    pinmux_reg2hw_wkup_detector_padsel_mreg_t [7:0] WKUP_DETECTOR_PADSEL; // [39:8]
    pinmux_reg2hw_wkup_cause_mreg_t [7:0] WKUP_CAUSE; // [7:0]
  } pinmux_reg2hw_t;

  // HW -> register type  (packed d+de HW updates)
  typedef struct packed {
    pinmux_hw2reg_mio_pad_attr_mreg_t [2:0] MIO_PAD_ATTR; // [127:110]
    pinmux_hw2reg_dio_pad_attr_mreg_t [8:0] DIO_PAD_ATTR; // [109:56]
    pinmux_hw2reg_di3c_pad_attr_mreg_t [1:0] DI3C_PAD_ATTR; // [55:44]
    pinmux_hw2reg_mio_pad_sleep_status_mreg_t [2:0] MIO_PAD_SLEEP_STATUS; // [43:38]
    pinmux_hw2reg_dio_pad_sleep_status_mreg_t [8:0] DIO_PAD_SLEEP_STATUS; // [37:20]
    pinmux_hw2reg_di3c_pad_sleep_status_mreg_t [1:0] DI3C_PAD_SLEEP_STATUS; // [19:16]
    pinmux_hw2reg_wkup_cause_mreg_t [7:0] WKUP_CAUSE; // [15:0]
  } pinmux_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] PINMUX_ALERT_TEST_OFFSET = 10'h 0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_0_OFFSET = 10'h 4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_1_OFFSET = 10'h 8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_2_OFFSET = 10'h c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_3_OFFSET = 10'h 10;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_4_OFFSET = 10'h 14;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_5_OFFSET = 10'h 18;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_6_OFFSET = 10'h 1c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_7_OFFSET = 10'h 20;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_8_OFFSET = 10'h 24;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_9_OFFSET = 10'h 28;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_10_OFFSET = 10'h 2c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_11_OFFSET = 10'h 30;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_12_OFFSET = 10'h 34;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_13_OFFSET = 10'h 38;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_14_OFFSET = 10'h 3c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_15_OFFSET = 10'h 40;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_16_OFFSET = 10'h 44;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_17_OFFSET = 10'h 48;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_18_OFFSET = 10'h 4c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_19_OFFSET = 10'h 50;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_20_OFFSET = 10'h 54;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_21_OFFSET = 10'h 58;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_22_OFFSET = 10'h 5c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_23_OFFSET = 10'h 60;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_24_OFFSET = 10'h 64;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_25_OFFSET = 10'h 68;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_26_OFFSET = 10'h 6c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_27_OFFSET = 10'h 70;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_28_OFFSET = 10'h 74;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_29_OFFSET = 10'h 78;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_30_OFFSET = 10'h 7c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_31_OFFSET = 10'h 80;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_32_OFFSET = 10'h 84;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_33_OFFSET = 10'h 88;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_34_OFFSET = 10'h 8c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_REGWEN_35_OFFSET = 10'h 90;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_0_OFFSET = 10'h 94;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_1_OFFSET = 10'h 98;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_2_OFFSET = 10'h 9c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_3_OFFSET = 10'h a0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_4_OFFSET = 10'h a4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_5_OFFSET = 10'h a8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_6_OFFSET = 10'h ac;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_7_OFFSET = 10'h b0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_8_OFFSET = 10'h b4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_9_OFFSET = 10'h b8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_10_OFFSET = 10'h bc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_11_OFFSET = 10'h c0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_12_OFFSET = 10'h c4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_13_OFFSET = 10'h c8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_14_OFFSET = 10'h cc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_15_OFFSET = 10'h d0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_16_OFFSET = 10'h d4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_17_OFFSET = 10'h d8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_18_OFFSET = 10'h dc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_19_OFFSET = 10'h e0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_20_OFFSET = 10'h e4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_21_OFFSET = 10'h e8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_22_OFFSET = 10'h ec;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_23_OFFSET = 10'h f0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_24_OFFSET = 10'h f4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_25_OFFSET = 10'h f8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_26_OFFSET = 10'h fc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_27_OFFSET = 10'h 100;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_28_OFFSET = 10'h 104;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_29_OFFSET = 10'h 108;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_30_OFFSET = 10'h 10c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_31_OFFSET = 10'h 110;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_32_OFFSET = 10'h 114;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_33_OFFSET = 10'h 118;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_34_OFFSET = 10'h 11c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PERIPH_INSEL_35_OFFSET = 10'h 120;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_REGWEN_0_OFFSET = 10'h 124;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_REGWEN_1_OFFSET = 10'h 128;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_REGWEN_2_OFFSET = 10'h 12c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_0_OFFSET = 10'h 130;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_1_OFFSET = 10'h 134;
  parameter logic [BlockAw-1:0] PINMUX_MIO_OUTSEL_2_OFFSET = 10'h 138;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_REGWEN_0_OFFSET = 10'h 13c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_REGWEN_1_OFFSET = 10'h 140;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_REGWEN_2_OFFSET = 10'h 144;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_0_OFFSET = 10'h 148;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_1_OFFSET = 10'h 14c;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_ATTR_2_OFFSET = 10'h 150;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_0_OFFSET = 10'h 154;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_1_OFFSET = 10'h 158;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_2_OFFSET = 10'h 15c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_3_OFFSET = 10'h 160;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_4_OFFSET = 10'h 164;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_5_OFFSET = 10'h 168;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_6_OFFSET = 10'h 16c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_7_OFFSET = 10'h 170;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_REGWEN_8_OFFSET = 10'h 174;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_0_OFFSET = 10'h 178;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_1_OFFSET = 10'h 17c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_2_OFFSET = 10'h 180;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_3_OFFSET = 10'h 184;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_4_OFFSET = 10'h 188;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_5_OFFSET = 10'h 18c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_6_OFFSET = 10'h 190;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_7_OFFSET = 10'h 194;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_ATTR_8_OFFSET = 10'h 198;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_ATTR_REGWEN_0_OFFSET = 10'h 19c;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_ATTR_REGWEN_1_OFFSET = 10'h 1a0;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_ATTR_0_OFFSET = 10'h 1a4;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_ATTR_1_OFFSET = 10'h 1a8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_STATUS_OFFSET = 10'h 1ac;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_REGWEN_0_OFFSET = 10'h 1b0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_REGWEN_1_OFFSET = 10'h 1b4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_REGWEN_2_OFFSET = 10'h 1b8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_EN_0_OFFSET = 10'h 1bc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_EN_1_OFFSET = 10'h 1c0;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_EN_2_OFFSET = 10'h 1c4;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_MODE_0_OFFSET = 10'h 1c8;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_MODE_1_OFFSET = 10'h 1cc;
  parameter logic [BlockAw-1:0] PINMUX_MIO_PAD_SLEEP_MODE_2_OFFSET = 10'h 1d0;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_STATUS_OFFSET = 10'h 1d4;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_0_OFFSET = 10'h 1d8;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_1_OFFSET = 10'h 1dc;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_2_OFFSET = 10'h 1e0;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_3_OFFSET = 10'h 1e4;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_4_OFFSET = 10'h 1e8;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_5_OFFSET = 10'h 1ec;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_6_OFFSET = 10'h 1f0;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_7_OFFSET = 10'h 1f4;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_REGWEN_8_OFFSET = 10'h 1f8;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_0_OFFSET = 10'h 1fc;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_1_OFFSET = 10'h 200;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_2_OFFSET = 10'h 204;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_3_OFFSET = 10'h 208;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_4_OFFSET = 10'h 20c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_5_OFFSET = 10'h 210;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_6_OFFSET = 10'h 214;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_7_OFFSET = 10'h 218;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_EN_8_OFFSET = 10'h 21c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_0_OFFSET = 10'h 220;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_1_OFFSET = 10'h 224;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_2_OFFSET = 10'h 228;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_3_OFFSET = 10'h 22c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_4_OFFSET = 10'h 230;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_5_OFFSET = 10'h 234;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_6_OFFSET = 10'h 238;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_7_OFFSET = 10'h 23c;
  parameter logic [BlockAw-1:0] PINMUX_DIO_PAD_SLEEP_MODE_8_OFFSET = 10'h 240;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_STATUS_OFFSET = 10'h 244;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_REGWEN_0_OFFSET = 10'h 248;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_REGWEN_1_OFFSET = 10'h 24c;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_EN_0_OFFSET = 10'h 250;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_EN_1_OFFSET = 10'h 254;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_MODE_0_OFFSET = 10'h 258;
  parameter logic [BlockAw-1:0] PINMUX_DI3C_PAD_SLEEP_MODE_1_OFFSET = 10'h 25c;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_0_OFFSET = 10'h 260;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_1_OFFSET = 10'h 264;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_2_OFFSET = 10'h 268;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_3_OFFSET = 10'h 26c;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_4_OFFSET = 10'h 270;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_5_OFFSET = 10'h 274;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_6_OFFSET = 10'h 278;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_REGWEN_7_OFFSET = 10'h 27c;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_0_OFFSET = 10'h 280;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_1_OFFSET = 10'h 284;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_2_OFFSET = 10'h 288;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_3_OFFSET = 10'h 28c;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_4_OFFSET = 10'h 290;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_5_OFFSET = 10'h 294;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_6_OFFSET = 10'h 298;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_EN_7_OFFSET = 10'h 29c;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_0_OFFSET = 10'h 2a0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_1_OFFSET = 10'h 2a4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_2_OFFSET = 10'h 2a8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_3_OFFSET = 10'h 2ac;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_4_OFFSET = 10'h 2b0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_5_OFFSET = 10'h 2b4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_6_OFFSET = 10'h 2b8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_7_OFFSET = 10'h 2bc;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_0_OFFSET = 10'h 2c0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_1_OFFSET = 10'h 2c4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_2_OFFSET = 10'h 2c8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_3_OFFSET = 10'h 2cc;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_4_OFFSET = 10'h 2d0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_5_OFFSET = 10'h 2d4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_6_OFFSET = 10'h 2d8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_CNT_TH_7_OFFSET = 10'h 2dc;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_0_OFFSET = 10'h 2e0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_1_OFFSET = 10'h 2e4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_2_OFFSET = 10'h 2e8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_3_OFFSET = 10'h 2ec;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_4_OFFSET = 10'h 2f0;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_5_OFFSET = 10'h 2f4;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_6_OFFSET = 10'h 2f8;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_DETECTOR_PADSEL_7_OFFSET = 10'h 2fc;
  parameter logic [BlockAw-1:0] PINMUX_WKUP_CAUSE_OFFSET = 10'h 300;

  // Reset values for hwext registers and their fields
  parameter logic [0:0] PINMUX_ALERT_TEST_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_ALERT_TEST_FATAL_FAULT_RESVAL = 1'h 0;
  parameter logic [6:0] PINMUX_MIO_PAD_ATTR_0_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_0_PUEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_0_PDEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_0_SMTEN_0_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_MIO_PAD_ATTR_0_DRV_0_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_MIO_PAD_ATTR_1_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_1_PUEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_1_PDEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_1_SMTEN_1_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_MIO_PAD_ATTR_1_DRV_1_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_MIO_PAD_ATTR_2_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_2_PUEN_2_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_2_PDEN_2_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_MIO_PAD_ATTR_2_SMTEN_2_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_MIO_PAD_ATTR_2_DRV_2_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_0_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_0_PUEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_0_PDEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_0_SMTEN_0_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_0_DRV_0_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_1_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_1_PUEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_1_PDEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_1_SMTEN_1_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_1_DRV_1_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_2_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_2_PUEN_2_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_2_PDEN_2_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_2_SMTEN_2_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_2_DRV_2_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_3_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_3_PUEN_3_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_3_PDEN_3_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_3_SMTEN_3_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_3_DRV_3_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_4_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_4_PUEN_4_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_4_PDEN_4_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_4_SMTEN_4_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_4_DRV_4_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_5_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_5_PUEN_5_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_5_PDEN_5_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_5_SMTEN_5_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_5_DRV_5_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_6_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_6_PUEN_6_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_6_PDEN_6_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_6_SMTEN_6_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_6_DRV_6_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_7_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_7_PUEN_7_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_7_PDEN_7_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_7_SMTEN_7_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_7_DRV_7_RESVAL = 3'h 0;
  parameter logic [6:0] PINMUX_DIO_PAD_ATTR_8_RESVAL = 7'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_8_PUEN_8_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_8_PDEN_8_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DIO_PAD_ATTR_8_SMTEN_8_RESVAL = 1'h 0;
  parameter logic [2:0] PINMUX_DIO_PAD_ATTR_8_DRV_8_RESVAL = 3'h 0;
  parameter logic [5:0] PINMUX_DI3C_PAD_ATTR_0_RESVAL = 6'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_PUEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_PDEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_FILTEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_DLYEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_I2CEN_0_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_0_RINTEN_0_RESVAL = 1'h 0;
  parameter logic [5:0] PINMUX_DI3C_PAD_ATTR_1_RESVAL = 6'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_PUEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_PDEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_FILTEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_DLYEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_I2CEN_1_RESVAL = 1'h 0;
  parameter logic [0:0] PINMUX_DI3C_PAD_ATTR_1_RINTEN_1_RESVAL = 1'h 0;

  // Register index
  typedef enum int {
    PINMUX_ALERT_TEST,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_0,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_1,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_2,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_3,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_4,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_5,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_6,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_7,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_8,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_9,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_10,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_11,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_12,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_13,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_14,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_15,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_16,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_17,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_18,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_19,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_20,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_21,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_22,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_23,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_24,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_25,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_26,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_27,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_28,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_29,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_30,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_31,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_32,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_33,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_34,
    PINMUX_MIO_PERIPH_INSEL_REGWEN_35,
    PINMUX_MIO_PERIPH_INSEL_0,
    PINMUX_MIO_PERIPH_INSEL_1,
    PINMUX_MIO_PERIPH_INSEL_2,
    PINMUX_MIO_PERIPH_INSEL_3,
    PINMUX_MIO_PERIPH_INSEL_4,
    PINMUX_MIO_PERIPH_INSEL_5,
    PINMUX_MIO_PERIPH_INSEL_6,
    PINMUX_MIO_PERIPH_INSEL_7,
    PINMUX_MIO_PERIPH_INSEL_8,
    PINMUX_MIO_PERIPH_INSEL_9,
    PINMUX_MIO_PERIPH_INSEL_10,
    PINMUX_MIO_PERIPH_INSEL_11,
    PINMUX_MIO_PERIPH_INSEL_12,
    PINMUX_MIO_PERIPH_INSEL_13,
    PINMUX_MIO_PERIPH_INSEL_14,
    PINMUX_MIO_PERIPH_INSEL_15,
    PINMUX_MIO_PERIPH_INSEL_16,
    PINMUX_MIO_PERIPH_INSEL_17,
    PINMUX_MIO_PERIPH_INSEL_18,
    PINMUX_MIO_PERIPH_INSEL_19,
    PINMUX_MIO_PERIPH_INSEL_20,
    PINMUX_MIO_PERIPH_INSEL_21,
    PINMUX_MIO_PERIPH_INSEL_22,
    PINMUX_MIO_PERIPH_INSEL_23,
    PINMUX_MIO_PERIPH_INSEL_24,
    PINMUX_MIO_PERIPH_INSEL_25,
    PINMUX_MIO_PERIPH_INSEL_26,
    PINMUX_MIO_PERIPH_INSEL_27,
    PINMUX_MIO_PERIPH_INSEL_28,
    PINMUX_MIO_PERIPH_INSEL_29,
    PINMUX_MIO_PERIPH_INSEL_30,
    PINMUX_MIO_PERIPH_INSEL_31,
    PINMUX_MIO_PERIPH_INSEL_32,
    PINMUX_MIO_PERIPH_INSEL_33,
    PINMUX_MIO_PERIPH_INSEL_34,
    PINMUX_MIO_PERIPH_INSEL_35,
    PINMUX_MIO_OUTSEL_REGWEN_0,
    PINMUX_MIO_OUTSEL_REGWEN_1,
    PINMUX_MIO_OUTSEL_REGWEN_2,
    PINMUX_MIO_OUTSEL_0,
    PINMUX_MIO_OUTSEL_1,
    PINMUX_MIO_OUTSEL_2,
    PINMUX_MIO_PAD_ATTR_REGWEN_0,
    PINMUX_MIO_PAD_ATTR_REGWEN_1,
    PINMUX_MIO_PAD_ATTR_REGWEN_2,
    PINMUX_MIO_PAD_ATTR_0,
    PINMUX_MIO_PAD_ATTR_1,
    PINMUX_MIO_PAD_ATTR_2,
    PINMUX_DIO_PAD_ATTR_REGWEN_0,
    PINMUX_DIO_PAD_ATTR_REGWEN_1,
    PINMUX_DIO_PAD_ATTR_REGWEN_2,
    PINMUX_DIO_PAD_ATTR_REGWEN_3,
    PINMUX_DIO_PAD_ATTR_REGWEN_4,
    PINMUX_DIO_PAD_ATTR_REGWEN_5,
    PINMUX_DIO_PAD_ATTR_REGWEN_6,
    PINMUX_DIO_PAD_ATTR_REGWEN_7,
    PINMUX_DIO_PAD_ATTR_REGWEN_8,
    PINMUX_DIO_PAD_ATTR_0,
    PINMUX_DIO_PAD_ATTR_1,
    PINMUX_DIO_PAD_ATTR_2,
    PINMUX_DIO_PAD_ATTR_3,
    PINMUX_DIO_PAD_ATTR_4,
    PINMUX_DIO_PAD_ATTR_5,
    PINMUX_DIO_PAD_ATTR_6,
    PINMUX_DIO_PAD_ATTR_7,
    PINMUX_DIO_PAD_ATTR_8,
    PINMUX_DI3C_PAD_ATTR_REGWEN_0,
    PINMUX_DI3C_PAD_ATTR_REGWEN_1,
    PINMUX_DI3C_PAD_ATTR_0,
    PINMUX_DI3C_PAD_ATTR_1,
    PINMUX_MIO_PAD_SLEEP_STATUS,
    PINMUX_MIO_PAD_SLEEP_REGWEN_0,
    PINMUX_MIO_PAD_SLEEP_REGWEN_1,
    PINMUX_MIO_PAD_SLEEP_REGWEN_2,
    PINMUX_MIO_PAD_SLEEP_EN_0,
    PINMUX_MIO_PAD_SLEEP_EN_1,
    PINMUX_MIO_PAD_SLEEP_EN_2,
    PINMUX_MIO_PAD_SLEEP_MODE_0,
    PINMUX_MIO_PAD_SLEEP_MODE_1,
    PINMUX_MIO_PAD_SLEEP_MODE_2,
    PINMUX_DIO_PAD_SLEEP_STATUS,
    PINMUX_DIO_PAD_SLEEP_REGWEN_0,
    PINMUX_DIO_PAD_SLEEP_REGWEN_1,
    PINMUX_DIO_PAD_SLEEP_REGWEN_2,
    PINMUX_DIO_PAD_SLEEP_REGWEN_3,
    PINMUX_DIO_PAD_SLEEP_REGWEN_4,
    PINMUX_DIO_PAD_SLEEP_REGWEN_5,
    PINMUX_DIO_PAD_SLEEP_REGWEN_6,
    PINMUX_DIO_PAD_SLEEP_REGWEN_7,
    PINMUX_DIO_PAD_SLEEP_REGWEN_8,
    PINMUX_DIO_PAD_SLEEP_EN_0,
    PINMUX_DIO_PAD_SLEEP_EN_1,
    PINMUX_DIO_PAD_SLEEP_EN_2,
    PINMUX_DIO_PAD_SLEEP_EN_3,
    PINMUX_DIO_PAD_SLEEP_EN_4,
    PINMUX_DIO_PAD_SLEEP_EN_5,
    PINMUX_DIO_PAD_SLEEP_EN_6,
    PINMUX_DIO_PAD_SLEEP_EN_7,
    PINMUX_DIO_PAD_SLEEP_EN_8,
    PINMUX_DIO_PAD_SLEEP_MODE_0,
    PINMUX_DIO_PAD_SLEEP_MODE_1,
    PINMUX_DIO_PAD_SLEEP_MODE_2,
    PINMUX_DIO_PAD_SLEEP_MODE_3,
    PINMUX_DIO_PAD_SLEEP_MODE_4,
    PINMUX_DIO_PAD_SLEEP_MODE_5,
    PINMUX_DIO_PAD_SLEEP_MODE_6,
    PINMUX_DIO_PAD_SLEEP_MODE_7,
    PINMUX_DIO_PAD_SLEEP_MODE_8,
    PINMUX_DI3C_PAD_SLEEP_STATUS,
    PINMUX_DI3C_PAD_SLEEP_REGWEN_0,
    PINMUX_DI3C_PAD_SLEEP_REGWEN_1,
    PINMUX_DI3C_PAD_SLEEP_EN_0,
    PINMUX_DI3C_PAD_SLEEP_EN_1,
    PINMUX_DI3C_PAD_SLEEP_MODE_0,
    PINMUX_DI3C_PAD_SLEEP_MODE_1,
    PINMUX_WKUP_DETECTOR_REGWEN_0,
    PINMUX_WKUP_DETECTOR_REGWEN_1,
    PINMUX_WKUP_DETECTOR_REGWEN_2,
    PINMUX_WKUP_DETECTOR_REGWEN_3,
    PINMUX_WKUP_DETECTOR_REGWEN_4,
    PINMUX_WKUP_DETECTOR_REGWEN_5,
    PINMUX_WKUP_DETECTOR_REGWEN_6,
    PINMUX_WKUP_DETECTOR_REGWEN_7,
    PINMUX_WKUP_DETECTOR_EN_0,
    PINMUX_WKUP_DETECTOR_EN_1,
    PINMUX_WKUP_DETECTOR_EN_2,
    PINMUX_WKUP_DETECTOR_EN_3,
    PINMUX_WKUP_DETECTOR_EN_4,
    PINMUX_WKUP_DETECTOR_EN_5,
    PINMUX_WKUP_DETECTOR_EN_6,
    PINMUX_WKUP_DETECTOR_EN_7,
    PINMUX_WKUP_DETECTOR_0,
    PINMUX_WKUP_DETECTOR_1,
    PINMUX_WKUP_DETECTOR_2,
    PINMUX_WKUP_DETECTOR_3,
    PINMUX_WKUP_DETECTOR_4,
    PINMUX_WKUP_DETECTOR_5,
    PINMUX_WKUP_DETECTOR_6,
    PINMUX_WKUP_DETECTOR_7,
    PINMUX_WKUP_DETECTOR_CNT_TH_0,
    PINMUX_WKUP_DETECTOR_CNT_TH_1,
    PINMUX_WKUP_DETECTOR_CNT_TH_2,
    PINMUX_WKUP_DETECTOR_CNT_TH_3,
    PINMUX_WKUP_DETECTOR_CNT_TH_4,
    PINMUX_WKUP_DETECTOR_CNT_TH_5,
    PINMUX_WKUP_DETECTOR_CNT_TH_6,
    PINMUX_WKUP_DETECTOR_CNT_TH_7,
    PINMUX_WKUP_DETECTOR_PADSEL_0,
    PINMUX_WKUP_DETECTOR_PADSEL_1,
    PINMUX_WKUP_DETECTOR_PADSEL_2,
    PINMUX_WKUP_DETECTOR_PADSEL_3,
    PINMUX_WKUP_DETECTOR_PADSEL_4,
    PINMUX_WKUP_DETECTOR_PADSEL_5,
    PINMUX_WKUP_DETECTOR_PADSEL_6,
    PINMUX_WKUP_DETECTOR_PADSEL_7,
    PINMUX_WKUP_CAUSE
  } pinmux_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] PINMUX_PERMIT [193] = '{
    4'b 0001, // index[  0] PINMUX_ALERT_TEST
    4'b 0001, // index[  1] PINMUX_MIO_PERIPH_INSEL_REGWEN_0
    4'b 0001, // index[  2] PINMUX_MIO_PERIPH_INSEL_REGWEN_1
    4'b 0001, // index[  3] PINMUX_MIO_PERIPH_INSEL_REGWEN_2
    4'b 0001, // index[  4] PINMUX_MIO_PERIPH_INSEL_REGWEN_3
    4'b 0001, // index[  5] PINMUX_MIO_PERIPH_INSEL_REGWEN_4
    4'b 0001, // index[  6] PINMUX_MIO_PERIPH_INSEL_REGWEN_5
    4'b 0001, // index[  7] PINMUX_MIO_PERIPH_INSEL_REGWEN_6
    4'b 0001, // index[  8] PINMUX_MIO_PERIPH_INSEL_REGWEN_7
    4'b 0001, // index[  9] PINMUX_MIO_PERIPH_INSEL_REGWEN_8
    4'b 0001, // index[ 10] PINMUX_MIO_PERIPH_INSEL_REGWEN_9
    4'b 0001, // index[ 11] PINMUX_MIO_PERIPH_INSEL_REGWEN_10
    4'b 0001, // index[ 12] PINMUX_MIO_PERIPH_INSEL_REGWEN_11
    4'b 0001, // index[ 13] PINMUX_MIO_PERIPH_INSEL_REGWEN_12
    4'b 0001, // index[ 14] PINMUX_MIO_PERIPH_INSEL_REGWEN_13
    4'b 0001, // index[ 15] PINMUX_MIO_PERIPH_INSEL_REGWEN_14
    4'b 0001, // index[ 16] PINMUX_MIO_PERIPH_INSEL_REGWEN_15
    4'b 0001, // index[ 17] PINMUX_MIO_PERIPH_INSEL_REGWEN_16
    4'b 0001, // index[ 18] PINMUX_MIO_PERIPH_INSEL_REGWEN_17
    4'b 0001, // index[ 19] PINMUX_MIO_PERIPH_INSEL_REGWEN_18
    4'b 0001, // index[ 20] PINMUX_MIO_PERIPH_INSEL_REGWEN_19
    4'b 0001, // index[ 21] PINMUX_MIO_PERIPH_INSEL_REGWEN_20
    4'b 0001, // index[ 22] PINMUX_MIO_PERIPH_INSEL_REGWEN_21
    4'b 0001, // index[ 23] PINMUX_MIO_PERIPH_INSEL_REGWEN_22
    4'b 0001, // index[ 24] PINMUX_MIO_PERIPH_INSEL_REGWEN_23
    4'b 0001, // index[ 25] PINMUX_MIO_PERIPH_INSEL_REGWEN_24
    4'b 0001, // index[ 26] PINMUX_MIO_PERIPH_INSEL_REGWEN_25
    4'b 0001, // index[ 27] PINMUX_MIO_PERIPH_INSEL_REGWEN_26
    4'b 0001, // index[ 28] PINMUX_MIO_PERIPH_INSEL_REGWEN_27
    4'b 0001, // index[ 29] PINMUX_MIO_PERIPH_INSEL_REGWEN_28
    4'b 0001, // index[ 30] PINMUX_MIO_PERIPH_INSEL_REGWEN_29
    4'b 0001, // index[ 31] PINMUX_MIO_PERIPH_INSEL_REGWEN_30
    4'b 0001, // index[ 32] PINMUX_MIO_PERIPH_INSEL_REGWEN_31
    4'b 0001, // index[ 33] PINMUX_MIO_PERIPH_INSEL_REGWEN_32
    4'b 0001, // index[ 34] PINMUX_MIO_PERIPH_INSEL_REGWEN_33
    4'b 0001, // index[ 35] PINMUX_MIO_PERIPH_INSEL_REGWEN_34
    4'b 0001, // index[ 36] PINMUX_MIO_PERIPH_INSEL_REGWEN_35
    4'b 0001, // index[ 37] PINMUX_MIO_PERIPH_INSEL_0
    4'b 0001, // index[ 38] PINMUX_MIO_PERIPH_INSEL_1
    4'b 0001, // index[ 39] PINMUX_MIO_PERIPH_INSEL_2
    4'b 0001, // index[ 40] PINMUX_MIO_PERIPH_INSEL_3
    4'b 0001, // index[ 41] PINMUX_MIO_PERIPH_INSEL_4
    4'b 0001, // index[ 42] PINMUX_MIO_PERIPH_INSEL_5
    4'b 0001, // index[ 43] PINMUX_MIO_PERIPH_INSEL_6
    4'b 0001, // index[ 44] PINMUX_MIO_PERIPH_INSEL_7
    4'b 0001, // index[ 45] PINMUX_MIO_PERIPH_INSEL_8
    4'b 0001, // index[ 46] PINMUX_MIO_PERIPH_INSEL_9
    4'b 0001, // index[ 47] PINMUX_MIO_PERIPH_INSEL_10
    4'b 0001, // index[ 48] PINMUX_MIO_PERIPH_INSEL_11
    4'b 0001, // index[ 49] PINMUX_MIO_PERIPH_INSEL_12
    4'b 0001, // index[ 50] PINMUX_MIO_PERIPH_INSEL_13
    4'b 0001, // index[ 51] PINMUX_MIO_PERIPH_INSEL_14
    4'b 0001, // index[ 52] PINMUX_MIO_PERIPH_INSEL_15
    4'b 0001, // index[ 53] PINMUX_MIO_PERIPH_INSEL_16
    4'b 0001, // index[ 54] PINMUX_MIO_PERIPH_INSEL_17
    4'b 0001, // index[ 55] PINMUX_MIO_PERIPH_INSEL_18
    4'b 0001, // index[ 56] PINMUX_MIO_PERIPH_INSEL_19
    4'b 0001, // index[ 57] PINMUX_MIO_PERIPH_INSEL_20
    4'b 0001, // index[ 58] PINMUX_MIO_PERIPH_INSEL_21
    4'b 0001, // index[ 59] PINMUX_MIO_PERIPH_INSEL_22
    4'b 0001, // index[ 60] PINMUX_MIO_PERIPH_INSEL_23
    4'b 0001, // index[ 61] PINMUX_MIO_PERIPH_INSEL_24
    4'b 0001, // index[ 62] PINMUX_MIO_PERIPH_INSEL_25
    4'b 0001, // index[ 63] PINMUX_MIO_PERIPH_INSEL_26
    4'b 0001, // index[ 64] PINMUX_MIO_PERIPH_INSEL_27
    4'b 0001, // index[ 65] PINMUX_MIO_PERIPH_INSEL_28
    4'b 0001, // index[ 66] PINMUX_MIO_PERIPH_INSEL_29
    4'b 0001, // index[ 67] PINMUX_MIO_PERIPH_INSEL_30
    4'b 0001, // index[ 68] PINMUX_MIO_PERIPH_INSEL_31
    4'b 0001, // index[ 69] PINMUX_MIO_PERIPH_INSEL_32
    4'b 0001, // index[ 70] PINMUX_MIO_PERIPH_INSEL_33
    4'b 0001, // index[ 71] PINMUX_MIO_PERIPH_INSEL_34
    4'b 0001, // index[ 72] PINMUX_MIO_PERIPH_INSEL_35
    4'b 0001, // index[ 73] PINMUX_MIO_OUTSEL_REGWEN_0
    4'b 0001, // index[ 74] PINMUX_MIO_OUTSEL_REGWEN_1
    4'b 0001, // index[ 75] PINMUX_MIO_OUTSEL_REGWEN_2
    4'b 0001, // index[ 76] PINMUX_MIO_OUTSEL_0
    4'b 0001, // index[ 77] PINMUX_MIO_OUTSEL_1
    4'b 0001, // index[ 78] PINMUX_MIO_OUTSEL_2
    4'b 0001, // index[ 79] PINMUX_MIO_PAD_ATTR_REGWEN_0
    4'b 0001, // index[ 80] PINMUX_MIO_PAD_ATTR_REGWEN_1
    4'b 0001, // index[ 81] PINMUX_MIO_PAD_ATTR_REGWEN_2
    4'b 0001, // index[ 82] PINMUX_MIO_PAD_ATTR_0
    4'b 0001, // index[ 83] PINMUX_MIO_PAD_ATTR_1
    4'b 0001, // index[ 84] PINMUX_MIO_PAD_ATTR_2
    4'b 0001, // index[ 85] PINMUX_DIO_PAD_ATTR_REGWEN_0
    4'b 0001, // index[ 86] PINMUX_DIO_PAD_ATTR_REGWEN_1
    4'b 0001, // index[ 87] PINMUX_DIO_PAD_ATTR_REGWEN_2
    4'b 0001, // index[ 88] PINMUX_DIO_PAD_ATTR_REGWEN_3
    4'b 0001, // index[ 89] PINMUX_DIO_PAD_ATTR_REGWEN_4
    4'b 0001, // index[ 90] PINMUX_DIO_PAD_ATTR_REGWEN_5
    4'b 0001, // index[ 91] PINMUX_DIO_PAD_ATTR_REGWEN_6
    4'b 0001, // index[ 92] PINMUX_DIO_PAD_ATTR_REGWEN_7
    4'b 0001, // index[ 93] PINMUX_DIO_PAD_ATTR_REGWEN_8
    4'b 0001, // index[ 94] PINMUX_DIO_PAD_ATTR_0
    4'b 0001, // index[ 95] PINMUX_DIO_PAD_ATTR_1
    4'b 0001, // index[ 96] PINMUX_DIO_PAD_ATTR_2
    4'b 0001, // index[ 97] PINMUX_DIO_PAD_ATTR_3
    4'b 0001, // index[ 98] PINMUX_DIO_PAD_ATTR_4
    4'b 0001, // index[ 99] PINMUX_DIO_PAD_ATTR_5
    4'b 0001, // index[100] PINMUX_DIO_PAD_ATTR_6
    4'b 0001, // index[101] PINMUX_DIO_PAD_ATTR_7
    4'b 0001, // index[102] PINMUX_DIO_PAD_ATTR_8
    4'b 0001, // index[103] PINMUX_DI3C_PAD_ATTR_REGWEN_0
    4'b 0001, // index[104] PINMUX_DI3C_PAD_ATTR_REGWEN_1
    4'b 0001, // index[105] PINMUX_DI3C_PAD_ATTR_0
    4'b 0001, // index[106] PINMUX_DI3C_PAD_ATTR_1
    4'b 0001, // index[107] PINMUX_MIO_PAD_SLEEP_STATUS
    4'b 0001, // index[108] PINMUX_MIO_PAD_SLEEP_REGWEN_0
    4'b 0001, // index[109] PINMUX_MIO_PAD_SLEEP_REGWEN_1
    4'b 0001, // index[110] PINMUX_MIO_PAD_SLEEP_REGWEN_2
    4'b 0001, // index[111] PINMUX_MIO_PAD_SLEEP_EN_0
    4'b 0001, // index[112] PINMUX_MIO_PAD_SLEEP_EN_1
    4'b 0001, // index[113] PINMUX_MIO_PAD_SLEEP_EN_2
    4'b 0001, // index[114] PINMUX_MIO_PAD_SLEEP_MODE_0
    4'b 0001, // index[115] PINMUX_MIO_PAD_SLEEP_MODE_1
    4'b 0001, // index[116] PINMUX_MIO_PAD_SLEEP_MODE_2
    4'b 0011, // index[117] PINMUX_DIO_PAD_SLEEP_STATUS
    4'b 0001, // index[118] PINMUX_DIO_PAD_SLEEP_REGWEN_0
    4'b 0001, // index[119] PINMUX_DIO_PAD_SLEEP_REGWEN_1
    4'b 0001, // index[120] PINMUX_DIO_PAD_SLEEP_REGWEN_2
    4'b 0001, // index[121] PINMUX_DIO_PAD_SLEEP_REGWEN_3
    4'b 0001, // index[122] PINMUX_DIO_PAD_SLEEP_REGWEN_4
    4'b 0001, // index[123] PINMUX_DIO_PAD_SLEEP_REGWEN_5
    4'b 0001, // index[124] PINMUX_DIO_PAD_SLEEP_REGWEN_6
    4'b 0001, // index[125] PINMUX_DIO_PAD_SLEEP_REGWEN_7
    4'b 0001, // index[126] PINMUX_DIO_PAD_SLEEP_REGWEN_8
    4'b 0001, // index[127] PINMUX_DIO_PAD_SLEEP_EN_0
    4'b 0001, // index[128] PINMUX_DIO_PAD_SLEEP_EN_1
    4'b 0001, // index[129] PINMUX_DIO_PAD_SLEEP_EN_2
    4'b 0001, // index[130] PINMUX_DIO_PAD_SLEEP_EN_3
    4'b 0001, // index[131] PINMUX_DIO_PAD_SLEEP_EN_4
    4'b 0001, // index[132] PINMUX_DIO_PAD_SLEEP_EN_5
    4'b 0001, // index[133] PINMUX_DIO_PAD_SLEEP_EN_6
    4'b 0001, // index[134] PINMUX_DIO_PAD_SLEEP_EN_7
    4'b 0001, // index[135] PINMUX_DIO_PAD_SLEEP_EN_8
    4'b 0001, // index[136] PINMUX_DIO_PAD_SLEEP_MODE_0
    4'b 0001, // index[137] PINMUX_DIO_PAD_SLEEP_MODE_1
    4'b 0001, // index[138] PINMUX_DIO_PAD_SLEEP_MODE_2
    4'b 0001, // index[139] PINMUX_DIO_PAD_SLEEP_MODE_3
    4'b 0001, // index[140] PINMUX_DIO_PAD_SLEEP_MODE_4
    4'b 0001, // index[141] PINMUX_DIO_PAD_SLEEP_MODE_5
    4'b 0001, // index[142] PINMUX_DIO_PAD_SLEEP_MODE_6
    4'b 0001, // index[143] PINMUX_DIO_PAD_SLEEP_MODE_7
    4'b 0001, // index[144] PINMUX_DIO_PAD_SLEEP_MODE_8
    4'b 0001, // index[145] PINMUX_DI3C_PAD_SLEEP_STATUS
    4'b 0001, // index[146] PINMUX_DI3C_PAD_SLEEP_REGWEN_0
    4'b 0001, // index[147] PINMUX_DI3C_PAD_SLEEP_REGWEN_1
    4'b 0001, // index[148] PINMUX_DI3C_PAD_SLEEP_EN_0
    4'b 0001, // index[149] PINMUX_DI3C_PAD_SLEEP_EN_1
    4'b 0001, // index[150] PINMUX_DI3C_PAD_SLEEP_MODE_0
    4'b 0001, // index[151] PINMUX_DI3C_PAD_SLEEP_MODE_1
    4'b 0001, // index[152] PINMUX_WKUP_DETECTOR_REGWEN_0
    4'b 0001, // index[153] PINMUX_WKUP_DETECTOR_REGWEN_1
    4'b 0001, // index[154] PINMUX_WKUP_DETECTOR_REGWEN_2
    4'b 0001, // index[155] PINMUX_WKUP_DETECTOR_REGWEN_3
    4'b 0001, // index[156] PINMUX_WKUP_DETECTOR_REGWEN_4
    4'b 0001, // index[157] PINMUX_WKUP_DETECTOR_REGWEN_5
    4'b 0001, // index[158] PINMUX_WKUP_DETECTOR_REGWEN_6
    4'b 0001, // index[159] PINMUX_WKUP_DETECTOR_REGWEN_7
    4'b 0001, // index[160] PINMUX_WKUP_DETECTOR_EN_0
    4'b 0001, // index[161] PINMUX_WKUP_DETECTOR_EN_1
    4'b 0001, // index[162] PINMUX_WKUP_DETECTOR_EN_2
    4'b 0001, // index[163] PINMUX_WKUP_DETECTOR_EN_3
    4'b 0001, // index[164] PINMUX_WKUP_DETECTOR_EN_4
    4'b 0001, // index[165] PINMUX_WKUP_DETECTOR_EN_5
    4'b 0001, // index[166] PINMUX_WKUP_DETECTOR_EN_6
    4'b 0001, // index[167] PINMUX_WKUP_DETECTOR_EN_7
    4'b 0001, // index[168] PINMUX_WKUP_DETECTOR_0
    4'b 0001, // index[169] PINMUX_WKUP_DETECTOR_1
    4'b 0001, // index[170] PINMUX_WKUP_DETECTOR_2
    4'b 0001, // index[171] PINMUX_WKUP_DETECTOR_3
    4'b 0001, // index[172] PINMUX_WKUP_DETECTOR_4
    4'b 0001, // index[173] PINMUX_WKUP_DETECTOR_5
    4'b 0001, // index[174] PINMUX_WKUP_DETECTOR_6
    4'b 0001, // index[175] PINMUX_WKUP_DETECTOR_7
    4'b 0001, // index[176] PINMUX_WKUP_DETECTOR_CNT_TH_0
    4'b 0001, // index[177] PINMUX_WKUP_DETECTOR_CNT_TH_1
    4'b 0001, // index[178] PINMUX_WKUP_DETECTOR_CNT_TH_2
    4'b 0001, // index[179] PINMUX_WKUP_DETECTOR_CNT_TH_3
    4'b 0001, // index[180] PINMUX_WKUP_DETECTOR_CNT_TH_4
    4'b 0001, // index[181] PINMUX_WKUP_DETECTOR_CNT_TH_5
    4'b 0001, // index[182] PINMUX_WKUP_DETECTOR_CNT_TH_6
    4'b 0001, // index[183] PINMUX_WKUP_DETECTOR_CNT_TH_7
    4'b 0001, // index[184] PINMUX_WKUP_DETECTOR_PADSEL_0
    4'b 0001, // index[185] PINMUX_WKUP_DETECTOR_PADSEL_1
    4'b 0001, // index[186] PINMUX_WKUP_DETECTOR_PADSEL_2
    4'b 0001, // index[187] PINMUX_WKUP_DETECTOR_PADSEL_3
    4'b 0001, // index[188] PINMUX_WKUP_DETECTOR_PADSEL_4
    4'b 0001, // index[189] PINMUX_WKUP_DETECTOR_PADSEL_5
    4'b 0001, // index[190] PINMUX_WKUP_DETECTOR_PADSEL_6
    4'b 0001, // index[191] PINMUX_WKUP_DETECTOR_PADSEL_7
    4'b 0001  // index[192] PINMUX_WKUP_CAUSE
  };

endpackage
